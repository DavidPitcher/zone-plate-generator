%!PS
%%Title: Zoneplate Generator
%%Creator: David Pitcher
%%CreationDate: July 6, 2025

%***********************************************************************
% Import Arguments File and Run if it exists, otherwise use defaults
%***********************************************************************
ARGFILE (r) file
{
    %pop pop pop pop
    closefile
    ARGFILE run
    (GS -  Successfully loaded arguments from ARGFILE) =
} stopped {
    stack
    %clear
    (GS - Failed to load arguments from ARGFILE, loading defaults) =

    %***********************************************************************
    % DEFAULT ARGUMENTS:
    %***********************************************************************
    % change number to whatever focal length in mm you want
    /FOCAL 210 def              

    % number of opaque rings to generate
    /RINGS 7 def                

    % diamter of the punch outline to the out the zone plate
    /PUNCH_DIAMETER 20 def
    /PADDING 10 def 

    % change number to whatever magnification you want the
    % printed zone plate to be
    /MAG 1 def                  

    % change number to whatever wavelength in mm you want
    % 0.00022 is the wavelength of green light
    % 0.00056 is the wavelength of daylight
    /WAVE_LENGTH 0.00056 def    

    % scale factor for sieve holes on a ring
    /SIEVE_SCALE 1.5 def        

    % space between sieve holes in mm
    % the greater the magnification, the larger the number should be
    /SIEVE_SPACE 0.04 def       

    % type of zone plate to generate
    % valid values are GRID, PLATE, SIEVE, PHOTON
    /TYPE (PLATE) def

    % duplucating camera focal length used
    /DUP_FOCAL 180 def

    /NEGATIVE_MODE false def
} if
%***********************************************************************


%************************************************************************
% Constants
%************************************************************************
/pi 3.1415926536 def            
/pagewidth 305 def
/pageheight 457 def 
/border_mm 10 def
/available_width pagewidth border_mm 2 mul sub def
/available_height pageheight border_mm 2 mul sub def 
/zoneplate_diameter PUNCH_DIAMETER MAG mul PADDING add def
/zoneplate_columns available_width zoneplate_diameter div floor cvi def
/zoneplate_rows 
    0
    available_height zoneplate_diameter div 
    1 sub
    3 div
    1 sub
    floor cvi
    max
    3 mul 3 add
    def
/column_spacing available_width 
    zoneplate_columns zoneplate_diameter mul sub 
    zoneplate_columns 1 add 
    div def   
/row_spacing available_height 
    zoneplate_rows zoneplate_diameter mul sub 
    zoneplate_rows 1 add 
    div def 

%************************************************************************

%************************************************************************
% Custom gray handler that inverts colors based on mode
%************************************************************************
/customgray {
    NEGATIVE_MODE not {
        1 exch sub  % Invert the gray value (0→1, 1→0)
    } if
    setgray
} def
%************************************************************************

%************************************************************************
% Unit Conversion Definitions   
%************************************************************************
/mmToInches {25.4 div} def
/mmToPoints {2.83 mul} def                    
/pointsToMm {2.83 div} def                    
/pointsToMicrons {352.778 mul} def            
/offsetx {
    column_spacing zoneplate_diameter 2 div add
    exch 1 sub
    zoneplate_diameter column_spacing add mul
    add border_mm add
    mmToPoints
} def 
/offsety {
    row_spacing zoneplate_diameter 2 div add
    exch 1 sub
    zoneplate_diameter row_spacing add mul
    add border_mm add
    pageheight exch sub
    mmToPoints
} def
%******************************************************************

%************************************************************************
% Page Setup
%************************************************************************
<< /PageSize [pagewidth mmToPoints cvi pageheight mmToPoints cvi] >> setpagedevice
clippath
1 customgray fill
gsave
%************************************************************************


%*****************************************************************
% Calculate the Current Ring Radius
%*****************************************************************
/calc_radius_mm {
    % ring radius = sqrt(n * λ * f + (n^2 * λ^2) / 4)
    % apply_mag is on the stack
    % n is on stack and represents the ring number
    /apply_mag exch def
    dup dup mul WAVE_LENGTH dup mul mul 4 div   % (n^2*λ^2)/4
    exch WAVE_LENGTH mul FOCAL mul add          % n * λ * f + (n^2*λ^2)/4
    sqrt                                        % sqrt(n * λ * f + (n^2 * λ^2) / 4)
    apply_mag {
        MAG mul
    } if
} def
%*****************************************************************

%*****************************************************************
% Calculate Number of Sieve Circles in a Ring
% Usage: annulus_radius_mm ring_center_radius_mm calc_num_circles → num_circles
%*****************************************************************
/calc_num_circles {
    % Annulus Width on stack
    % Annulus Center Radius on stack
    /c_r exch def
    /a_w exch def
    /circumference_mm c_r 2 mul pi mul def % circumference = 2 * π * r
    circumference_mm a_w SIEVE_SPACE add div floor cvi
} def
%*****************************************************************

%*****************************************************************
% Calculate effective f-stop
% Usage: num_rings focal_length calc_effective_fstop → fstop
%******************************************************************
/calc_effective_fstop {
    % num_rings focal_length on stack
    % Calculate radius of innermost ring (n=1) in mm
    /fstop_fl exch def
    /fstop_r exch def

    /center_ring_area 1 false calc_radius_mm dup mul pi mul def

    % Total effective area = area of center ring * number of rings
    % Calculate effective diameter from total area
    % Calculate f-stop: f/D
    /fstop_effective_area center_ring_area fstop_r mul def
    /fstop_effective_diameter fstop_effective_area 4 mul pi div sqrt def % D = 2 * sqrt(A/π) = sqrt(4A/π) def
    fstop_fl fstop_effective_diameter div 0.5 add cvi
} def
%*****************************************************************

%*****************************************************************
% Calculate effective f-stop of a zone sieve
% Usage: num_rings focal_length calc_sieve_effective_fstop → fstop
%*****************************************************************
/calc_sieve_effective_fstop {
    % num_rings focal_length on stack
    /sieve_fstop_fl exch def
    /sieve_fstop_r exch def
    
    % Calculate center ring area (always solid for zone sieve)
    /center_ring_area 1 false calc_radius_mm dup mul pi mul def
    
    % Initialize total effective area with center ring
    /sieve_total_area center_ring_area def
    2 2 sieve_fstop_r 2 mul {
        /n exch def
        
        /outer_radius_mm n false calc_radius_mm def
        /inner_radius_mm n 1 sub false calc_radius_mm def
        /annulus_width_mm outer_radius_mm inner_radius_mm sub def
        
        % Calculate the center of the ring (midpoint between inner and outer radii)
        /ring_center_radius_mm inner_radius_mm annulus_width_mm 2 div add def
        
        % Calculate number of circles in this ring
        /num_circles annulus_width_mm SIEVE_SCALE mul ring_center_radius_mm calc_num_circles def
        
        % Calculate area of each circle in this ring
        /sieve_hole_radius annulus_width_mm SIEVE_SCALE mul 2 div def
        /sieve_hole_area sieve_hole_radius dup mul pi mul def
        
        % Add total area of all holes in this ring to the cumulative area
        /sieve_total_area sieve_total_area num_circles sieve_hole_area mul add def
    } for
    
    % Calculate effective diameter from total area
    /sieve_effective_diameter sieve_total_area 4 mul pi div sqrt def % D = sqrt(4A/π)
    
    % Calculate f-stop: f/D and round to nearest integer
    sieve_fstop_fl sieve_effective_diameter div 0.5 add cvi
} def
%*****************************************************************

%******************************************************************
% Concatenate an array of strings into a single string
% Usage: arrayOfStrings concatStrings → concatenatedString
%******************************************************************
/concatStrings {
    % Array of strings on stack
    % Returns single concatenated string
    /strArray exch def
    /totalLength 0 def

    % Calculate total length needed
    strArray {
        %/item exch def
        %item =
        length totalLength add /totalLength exch def
    } forall
    
    % Create result string and copy all parts
    /result totalLength string def
    /currentPos 0 def
    
    strArray {
        /str exch def
        result currentPos str putinterval
        /currentPos currentPos str length add def
    } forall
    result
} def
%******************************************************************

%*****************************************************************
% Draw 8" x 10" frame around page
%*****************************************************************
/drawBorder {
    gsave   
    1 mmToPoints setlinewidth
    0 customgray                
    newpath
    10 mmToPoints pageheight 10 sub mmToPoints moveto      % Start at (10mm, 269mm)
    pagewidth 20 sub mmToPoints 0 rlineto    % Draw to the right
    0 20 pageheight sub mmToPoints rlineto   % Draw down
    20 pagewidth sub mmToPoints 0 rlineto    % Draw left
    closepath
    stroke
    grestore
} def
%*****************************************************************  

%*****************************************************************
% Draw Zone Plates in Grid Pattern
%*****************************************************************
/drawZonePlate {
    /colOffset exch def
    /rowOffset exch def

    gsave

    % Translate current position to correct grid position
    colOffset rowOffset translate
    
    % Draw Punch Outline to cut zone plate from film
    0 customgray                                  
    .5 mmToPoints setlinewidth                                                  
    0 0 PUNCH_DIAMETER MAG mul 2 div mmToPoints 0 360 arc 
    stroke
    
    1 2 RINGS 2 mul {
        /n exch def
        
        /outer_radius_mm n true calc_radius_mm def
        /inner_radius_mm n 1 sub true calc_radius_mm def
        /annulus_width_mm outer_radius_mm inner_radius_mm sub def

        % Calculate the center of the ring (midpoint between inner and outer radii)
        /ring_center_radius_mm inner_radius_mm annulus_width_mm 2 div add def

        0 customgray
        annulus_width_mm mmToPoints setlinewidth
        0 0 ring_center_radius_mm mmToPoints 0 361 arc
        stroke
        
    } for 

    grestore
} def
%*****************************************************************  

%*****************************************************************
% Draw Zone Sieve in Grid Pattern
%*****************************************************************
/drawZoneSieve {
    /colOffset exch def
    /rowOffset exch def

    gsave

    % Translate current position to correct grid position
    colOffset rowOffset translate
    
    % Draw Punch Outline to cut zone plate from film
    0 customgray                                  
    .5 mmToPoints setlinewidth                                                   
    0 0 PUNCH_DIAMETER MAG mul 2 div mmToPoints 0 360 arc 
    stroke
    
    1 2 RINGS 2 mul {
        /n exch def
        
        /outer_radius_mm n true calc_radius_mm def
        /inner_radius_mm n 1 sub true calc_radius_mm def
        /annulus_width_mm outer_radius_mm inner_radius_mm sub def

        /ring_center_radius_mm inner_radius_mm annulus_width_mm 2 div add def
        n 1 eq {
            0 customgray
            annulus_width_mm mmToPoints setlinewidth
            0 0 ring_center_radius_mm mmToPoints 0 361 arc
            stroke 
        } {
            /num_circles annulus_width_mm SIEVE_SCALE mul ring_center_radius_mm calc_num_circles def
            /angular_spacing 360 num_circles div def
            rand 360 mod rotate  % Rotate by a random angle
            1 1 num_circles {
               0 customgray
               angular_spacing rotate
               ring_center_radius_mm mmToPoints 0 annulus_width_mm SIEVE_SCALE mul 2 div mmToPoints 0 360 arc fill
            } for
        } ifelse
    } for

    grestore
} def
%***************************************************************** 

%*****************************************************************
% Draw Photon Sieve in Grid Pattern
%*****************************************************************
/drawPhotonSieve {
    /colOffset exch def
    /rowOffset exch def

    gsave

    % Translate current position to correct grid position
    colOffset rowOffset translate
    
    % Draw Punch Outline to cut zone plate from film
    0 customgray                                  
    .5 mmToPoints setlinewidth                                                   
    0 0 PUNCH_DIAMETER MAG mul 2 div mmToPoints 0 360 arc 
    stroke
    
    1 2 RINGS 2 mul {
        /n exch def
        
        /outer_radius_mm n 1 add true calc_radius_mm def
        /inner_radius_mm n true calc_radius_mm def
        /annulus_width_mm outer_radius_mm inner_radius_mm sub def

        /ring_center_radius_mm inner_radius_mm annulus_width_mm 2 div add def
        /num_circles annulus_width_mm SIEVE_SCALE mul ring_center_radius_mm calc_num_circles def
        /angular_spacing 360 num_circles div def
        rand 360 mod rotate
        1 1 num_circles {
            0 customgray
            angular_spacing rotate
            ring_center_radius_mm mmToPoints 0 annulus_width_mm SIEVE_SCALE mul 2 div mmToPoints 0 360 arc fill
        } for
    } for

    grestore
} def
%*****************************************************************  

%*****************************************************************
% Draw Zone Plate Description
%*****************************************************************
/drawZonePlateDescription {
    /colOffset exch def
    /rowOffset exch def
    /effective_fstop exch def
    /type exch def
    gsave
    
    /focal_str FOCAL 150 string cvs def
    /rings_str RINGS 150 string cvs def
    /zp_diameter_str RINGS 2 mul 1 sub false calc_radius_mm 2 mul 150 string cvs def
    /fstop_str effective_fstop 150 string cvs def
 
    [
        (Type: )
        type 
        ( | Focal Length: )
        focal_str
        (mm | Zones: )
        rings_str
        ( | Zone Plate Diameter: )
        zp_diameter_str
        (mm | F/Stop: )
        fstop_str
    ] concatStrings /fullDescription exch def

    % Calculate string width for centering
    /Times-Roman findfont
    19 scalefont
    setfont
    /descWidth fullDescription stringwidth pop def
    
    % Calculate centered X position
    pagewidth mmToPoints 2 div descWidth 2 div sub
    rowOffset
    moveto
    
    % Draw the centered string 
    0 customgray
    fullDescription show

    grestore
} def
%*****************************************************************

%*****************************************************************
% Draw Zone Page with all types of Zone Plates in Grid Pattern
% Usage: rowIndex drawZonePage → updatedRowIndex
%*****************************************************************
/drawZonePage {
    /zone_rows zoneplate_rows 3 div 1 sub def
    /row_count 0 def
    drawBorder
    
    %Draw grid of Zone Plates
    1 1 zone_rows {                                    
        /row exch def
        /row_count row_count 1 add def
        /rowTrans row_count offsety def
        1 1 zoneplate_columns {                               
            /col exch def
            rowTrans col offsetx drawZonePlate                 
        } for
    } for
    
    %Print zone plate description
    /row_count row_count 1 add def
    (ZonePlate)
    RINGS FOCAL calc_effective_fstop
    row_count offsety 
    1 offsetx
    drawZonePlateDescription
    
    % Draw grid of Zone Sieves
    1 1 zone_rows {                                    
        /row exch def
        /row_count row_count 1 add def
        /rowTrans row_count offsety def
        1 1 zoneplate_columns {                               
            /col exch def
            rowTrans col offsetx drawZoneSieve                 
        } for
    } for
    
    %Print zone plate description
    /row_count row_count 1 add def
    (ZoneSieve)
    RINGS FOCAL calc_sieve_effective_fstop
    row_count offsety 
    1 offsetx
    drawZonePlateDescription
    
    % Draw grid of Photo Sieves
    1 1 zone_rows {                                    
        /row exch def
        /row_count row_count 1 add def
        /rowTrans row_count offsety def
        1 1 zoneplate_columns {                               
            /col exch def
            rowTrans col offsetx drawPhotonSieve                 
        } for
    } for
    
    %Print zone plate description
    /row_count row_count 1 add def
    (PhotonSieve)
    RINGS FOCAL calc_sieve_effective_fstop
    row_count offsety 
    1 offsetx
    drawZonePlateDescription
    
    % Return the updated row index
    row_count
} def
%*****************************************************************


%*****************************************************************
% Draw descroption for a sine centered zone plate type
% Usage: drawCenteredZonePlateDescription
%*****************************************************************
/drawCenteredZonePlateDescription { 
    /type exch def
    
    /Times-Roman findfont
    20 scalefont
    setfont

    % Position for description - centered at bottom of page
    /focal_str FOCAL 150 string cvs def
    /rings_str RINGS 150 string cvs def
    /zp_diameter_str RINGS 2 mul 1 sub false calc_radius_mm 2 mul 150 string cvs def
    /fstop_str RINGS FOCAL calc_effective_fstop 150 string cvs def
 
    [
        (Type: )
        type
        ( | Focal Length: )
        focal_str
        (mm | Zones: )
        rings_str
        ( | Zone Plate Diameter: )
        zp_diameter_str
        (mm | F/Stop: )
        fstop_str
    ] concatStrings /fullDescription exch def
    
    /descWidth fullDescription stringwidth pop def
    
    pagewidth mmToPoints 2 div descWidth 2 div sub
    30 mmToPoints
    moveto
    0 customgray
    fullDescription show

    /magnification_str MAG 150 string cvs def
    /cameraFocal_str DUP_FOCAL 150 string cvs def
    /cameraDistMm_str MAG DUP_FOCAL DUP_FOCAL MAG div add mul
        0.5 add cvi 150 string cvs def
    /cameraDistIn_str MAG DUP_FOCAL DUP_FOCAL MAG div add mul
        mmToInches 0.5 add cvi 150 string cvs def

    [
        (Magnification: )
        magnification_str
        (x | Camera Focal Length: ) 
        cameraFocal_str
        (mm | Camera Distance: )
        cameraDistMm_str
        (mm / )
        cameraDistIn_str
        (in)
    ] concatStrings /cameraDescription exch def 

    /descWidth cameraDescription stringwidth pop def
    
    pagewidth mmToPoints 2 div descWidth 2 div sub
    20 mmToPoints
    moveto
    0 customgray
    cameraDescription show
} def
%*****************************************************************

%*****************************************************************
% Draw a Single Zone Plate Centered on the Page
% Usage: drawCenteredZonePlate → -
%*****************************************************************
/drawCenteredZonePlate {
    gsave
    % Clear any existing drawing
    clippath 1 customgray fill
    0 customgray
    
    % Calculate center position for the zone plate
    % Center of page is at (pagewidth/2, pageheight/2)
    pagewidth 2 div mmToPoints
    pageheight 2 div mmToPoints
    translate
    
    % Draw zone plate at the center
    % Use existing drawZonePlate logic but without the translation
    % since we've already positioned at the center
    
    % Draw Punch Outline
    0 customgray                                  
    .5 mmToPoints setlinewidth                                                  
    0 0 PUNCH_DIAMETER MAG mul 2 div mmToPoints 0 360 arc 
    stroke
    
    1 2 RINGS 2 mul {
        /n exch def
        
        /outer_radius_mm n true calc_radius_mm def
        /inner_radius_mm n 1 sub true calc_radius_mm def
        /annulus_width_mm outer_radius_mm inner_radius_mm sub def

        % Calculate the center of the ring (midpoint between inner and outer radii)
        /ring_center_radius_mm inner_radius_mm annulus_width_mm 2 div add def

        0 customgray
        annulus_width_mm mmToPoints setlinewidth
        0 0 ring_center_radius_mm mmToPoints 0 361 arc
        stroke
    } for
    
    % Draw description at the bottom of the page
    grestore
    
    (Zone Plate) drawCenteredZonePlateDescription
} def
%*****************************************************************

%*****************************************************************
% Draw a Single Zone Sieve Centered on the Page
% Usage: drawCenteredZoneSieve → -
%*****************************************************************
/drawCenteredZoneSieve {
    gsave
    % Clear any existing drawing
    clippath 1 customgray fill
    0 customgray
    
    % Calculate center position for the zone sieve
    % Center of page is at (pagewidth/2, pageheight/2)
    pagewidth 2 div mmToPoints
    pageheight 2 div mmToPoints
    translate
    
    % Draw zone sieve at the center
    % Use existing drawZoneSieve logic but without the translation
    
    % Draw Punch Outline
    0 customgray                                  
    .5 mmToPoints setlinewidth                                                   
    0 0 PUNCH_DIAMETER MAG mul 2 div mmToPoints 0 360 arc 
    stroke
    
    1 2 RINGS 2 mul {
        /n exch def
        
        /outer_radius_mm n true calc_radius_mm def
        /inner_radius_mm n 1 sub true calc_radius_mm def
        /annulus_width_mm outer_radius_mm inner_radius_mm sub def

        /ring_center_radius_mm inner_radius_mm annulus_width_mm 2 div add def
        n 1 eq {
            0 customgray
            annulus_width_mm mmToPoints setlinewidth
            0 0 ring_center_radius_mm mmToPoints 0 361 arc
            stroke 
        } {
            /num_circles annulus_width_mm SIEVE_SCALE mul ring_center_radius_mm calc_num_circles def
            /angular_spacing 360 num_circles div def
            rand 360 mod rotate  % Rotate by a random angle
            1 1 num_circles {
               0 customgray
               angular_spacing rotate
               ring_center_radius_mm mmToPoints 0 annulus_width_mm SIEVE_SCALE mul 2 div mmToPoints 0 360 arc fill
            } for
        } ifelse
    } for
    
    % Draw description at the bottom of the page
    grestore
    
    (Zone Sieve) drawCenteredZonePlateDescription

} def
%*****************************************************************

%*****************************************************************
% Draw a Single Photon Sieve Centered on the Page
% Usage: drawCenteredPhotonSieve → -
%*****************************************************************
/drawCenteredPhotonSieve {
    gsave
    % Clear any existing drawing
    clippath 1 customgray fill
    0 customgray
    
    % Calculate center position for the photon sieve
    % Center of page is at (pagewidth/2, pageheight/2)
    pagewidth 2 div mmToPoints
    pageheight 2 div mmToPoints
    translate
    
    % Draw photon sieve at the center
    % Use existing drawPhotonSieve logic but without the translation
    
    % Draw Punch Outline
    0 customgray                                  
    .5 mmToPoints setlinewidth                                                   
    0 0 PUNCH_DIAMETER MAG mul 2 div mmToPoints 0 361 arc 
    stroke
    
    1 2 RINGS 2 mul {
        /n exch def

        /outer_radius_mm n 1 add true calc_radius_mm def
        /inner_radius_mm n true calc_radius_mm def
        /annulus_width_mm outer_radius_mm inner_radius_mm sub def

        /ring_center_radius_mm inner_radius_mm annulus_width_mm 2 div add def
        /num_circles annulus_width_mm SIEVE_SCALE mul ring_center_radius_mm calc_num_circles def
        /angular_spacing 360 num_circles div def
        rand 360 mod rotate
        1 1 num_circles {
            0 customgray
            angular_spacing rotate
            ring_center_radius_mm mmToPoints 0 annulus_width_mm SIEVE_SCALE mul 2 div mmToPoints 0 360 arc fill
        } for
    } for
    
    % Draw description at the bottom of the page
    grestore
    
    (Photon Sieve) drawCenteredZonePlateDescription
} def
%*****************************************************************

%*****************************************************************
% Main execution based on TYPE variable
%*****************************************************************
/executeDrawing {
    % Check the TYPE variable and execute appropriate drawing
    TYPE (GRID) eq {
        % Draw grid of all elements
        drawZonePage 
        showpage
    } {
        TYPE (PLATE) eq {
            % Draw centered Zone Plate
            %1 drawCenteredElement
            drawCenteredZonePlate
        } {
            TYPE (SIEVE) eq {
                % Draw centered Zone Sieve
                %2 drawCenteredElement
                drawCenteredZoneSieve
            } {
                TYPE (PHOTON) eq {
                    % Draw centered Photon Sieve
                    %3 drawCenteredElement
                    drawCenteredPhotonSieve
                } {
                    % Invalid TYPE - display error and show grid as default
                    /Times-Bold findfont 14 scalefont setfont
                    pagewidth 2 div mmToPoints pageheight 2 div mmToPoints moveto
                    (Error: Invalid TYPE. Using default GRID view.) stringwidth pop 2 div neg 0 rmoveto
                    (Error: Invalid TYPE. Using default GRID view.) show
                    
                    % Wait a moment to show error
                    1000 { 1 add } repeat
                    
                    % Show grid as default
                    currentRowIndex drawZonePage /currentRowIndex exch def
                    showpage
                } ifelse
            } ifelse
        } ifelse
    } ifelse
} def

% Execute drawing based on TYPE
executeDrawing


